{"ast":null,"code":"import { collection, doc, getFirestore } from 'firebase/firestore';\n\nclass DataLoader {\n  constructor() {\n    this.db = getFirestore();\n    this.docRef = doc(this.db, \"items\", \"kOZi4LOMN8lxa7piX404\");\n    this.itemCollection = collection(this.db, \"items\");\n    console.log('buenas');\n  }\n\n  static getInstance() {\n    if (!DataLoader.instance) {\n      DataLoader.instance = new DataLoader();\n    }\n\n    return DataLoader.instance;\n  }\n\n  loadData() {} //getDocs(itemCollection).then(snapshot => {\n  //    setProducts(snapshot.docs.map(doc =>\n  //    ({id: doc.id, ...doc.data()})\n  //    ))\n  //    console.log(products);\n  //})\n\n\n}\n\nDataLoader.instance = void 0;\nexport default DataLoader;","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/data/dataLoader.ts"],"names":["collection","doc","getFirestore","DataLoader","constructor","db","docRef","itemCollection","console","log","getInstance","instance","loadData"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAA6CC,YAA7C,QAAgE,oBAAhE;;AAEA,MAAMC,UAAN,CAAiB;AAOPC,EAAAA,WAAW,GAAG;AAAA,SAJtBC,EAIsB,GAJNH,YAAY,EAIN;AAAA,SAHtBI,MAGsB,GAHbL,GAAG,CAAC,KAAKI,EAAN,EAAS,OAAT,EAAiB,sBAAjB,CAGU;AAAA,SAFtBE,cAEsB,GAFLP,UAAU,CAAC,KAAKK,EAAN,EAAS,OAAT,CAEL;AACpBG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAAuB;;AAEA,SAAXC,WAAW,GAAe;AACtC,QAAI,CAACP,UAAU,CAACQ,QAAhB,EAA0B;AACtBR,MAAAA,UAAU,CAACQ,QAAX,GAAsB,IAAIR,UAAJ,EAAtB;AACH;;AAED,WAAOA,UAAU,CAACQ,QAAlB;AACD;;AAEDC,EAAAA,QAAQ,GAAS,CAEhB,CApBc,CAqBf;AACA;AACA;AACA;AACA;AACA;;;AA1Be;;AAAXT,U,CACWQ,Q;AA4BjB,eAAeR,UAAf","sourcesContent":["import {collection, doc, Firestore, getDocs, getFirestore} from 'firebase/firestore';\r\n\r\nclass DataLoader {\r\n  private static instance: DataLoader;\r\n\r\n  db: Firestore = getFirestore();\r\n  docRef = doc(this.db,\"items\",\"kOZi4LOMN8lxa7piX404\")\r\n  itemCollection = collection(this.db,\"items\")\r\n\r\n  private constructor() { \r\n    console.log('buenas');}\r\n\r\n  public static getInstance(): DataLoader {\r\n    if (!DataLoader.instance) {\r\n        DataLoader.instance = new DataLoader();\r\n    }\r\n\r\n    return DataLoader.instance;\r\n  }\r\n\r\n  loadData(): void {\r\n    \r\n  }\r\n  //getDocs(itemCollection).then(snapshot => {\r\n  //    setProducts(snapshot.docs.map(doc =>\r\n  //    ({id: doc.id, ...doc.data()})\r\n  //    ))\r\n  //    console.log(products);\r\n  //})\r\n}\r\n\r\nexport default DataLoader;"]},"metadata":{},"sourceType":"module"}