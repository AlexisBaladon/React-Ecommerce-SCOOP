{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactApp\\\\heladeria-e-commerce-baladon\\\\src\\\\components\\\\items\\\\list\\\\itemListContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './itemListContainer.css';\nimport ItemList from './itemList';\nimport { getFilteredItems, obtenerPromiseHelados } from '../../../helpers/promises';\nimport Loading from '../../loading/loading';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = _ref => {\n  _s();\n\n  let {\n    greeting\n  } = _ref;\n  //Parameters\n  const {\n    id\n  } = useParams(); //Showed items\n\n  const [helados, setHelados] = useState([]); //Filters items by category\n\n  const catFilter = i => i.category === id; //SetItem shouldn't be usesd after being unmounted\n\n\n  let isMounted = false;\n\n  const setIfMounted = item => {\n    if (isMounted) setHelados(item);\n  }; //Filters items in case of defining category\n\n\n  useEffect(() => {\n    isMounted = true;\n    id ? getFilteredItems(catFilter, setIfMounted) : obtenerPromiseHelados(setIfMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"item-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"titulo-tienda\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"greeting\",\n          children: greeting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lista-productos\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tienda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), helados.length ? /*#__PURE__*/_jsxDEV(ItemList, {\n            items: helados\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ItemListContainer, \"1MVCLbqHHn6vePvLhd6gB1HuZfY=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/components/items/list/itemListContainer.tsx"],"names":["React","useEffect","useState","ItemList","getFilteredItems","obtenerPromiseHelados","Loading","useParams","ItemListContainer","greeting","id","helados","setHelados","catFilter","i","category","isMounted","setIfMounted","item","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,OAAO,yBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAAQC,gBAAR,EAA0BC,qBAA1B,QAAsD,2BAAtD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAOA,MAAMC,iBAA4C,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA;AAAD,GAAuB;AAE3E;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB,CAH2E,CAK3E;;AACA,QAAM,CAACI,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAW,EAAX,CAArC,CAN2E,CAQ3E;;AACA,QAAMW,SAAS,GAAIC,CAAD,IAAwBA,CAAC,CAACC,QAAF,KAAeL,EAAzD,CAT2E,CAW3E;;;AACA,MAAIM,SAAS,GAAG,KAAhB;;AACA,QAAMC,YAAY,GAAIC,IAAD,IAAoB;AACvC,QAAIF,SAAJ,EAAeJ,UAAU,CAACM,IAAD,CAAV;AAChB,GAFD,CAb2E,CAiB3E;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS,GAAG,IAAZ;AACAN,IAAAA,EAAE,GACFN,gBAAgB,CAACS,SAAD,EAAYI,YAAZ,CADd,GAEFZ,qBAAqB,CAACY,YAAD,CAFrB;AAGA,WAAO,MAAM;AAACD,MAAAA,SAAS,GAAG,KAAZ;AAAkB,KAAhC;AACD,GANQ,EAMN,CAACN,EAAD,CANM,CAAT;AAQA,sBAAO;AAAA,2BACL;AAAK,MAAA,EAAE,EAAC,qBAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,+BACE;AAAI,UAAA,EAAE,EAAC,UAAP;AAAA,oBAAmBD;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA,+BACE;AAAK,UAAA,SAAS,EAAE,4BAAhB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGE,OAAO,CAACQ,MAAR,gBACD,QAAC,QAAD;AAAU,YAAA,KAAK,EAAER;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADC,gBAED,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,mBAAP;AAiBD,CA3CD;;GAAMH,iB;UAGWD,S;;;KAHXC,iB;AA6CN,eAAeA,iBAAf","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport './itemListContainer.css';\r\nimport ItemList from './itemList'\r\nimport DtItem from '../../../dataTypes/item'\r\nimport {getFilteredItems, obtenerPromiseHelados} from '../../../helpers/promises';\r\nimport Loading from '../../loading/loading';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\ninterface IProps {\r\n  greeting: string;\r\n}\r\n\r\nconst ItemListContainer: FunctionComponent<IProps> = ({greeting}: IProps) => {\r\n\r\n  //Parameters\r\n  const { id } = useParams<{id?: string}>();\r\n\r\n  //Showed items\r\n  const [helados,setHelados] = useState<DtItem[]>([]);\r\n\r\n  //Filters items by category\r\n  const catFilter = (i: DtItem): boolean => i.category === id;\r\n\r\n  //SetItem shouldn't be usesd after being unmounted\r\n  let isMounted = false;\r\n  const setIfMounted = (item: DtItem[]) => {\r\n    if (isMounted) setHelados(item);\r\n  }\r\n\r\n  //Filters items in case of defining category\r\n  useEffect(() => {\r\n    isMounted = true;\r\n    id ?\r\n    getFilteredItems(catFilter, setIfMounted) :\r\n    obtenerPromiseHelados(setIfMounted);\r\n    return () => {isMounted = false};\r\n  }, [id]);\r\n   \r\n  return <>\r\n    <div id=\"item-list-container\">\r\n      <div id=\"titulo-tienda\">\r\n        <h2 id=\"greeting\">{greeting}</h2>\r\n      </div>\r\n      <div id=\"lista-productos\">\r\n        <div className= \"row justify-content-center\">\r\n          <h2>Tienda</h2>\r\n          {helados.length?\r\n          <ItemList items={helados} />:\r\n          <Loading />\r\n          }\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default ItemListContainer;"]},"metadata":{},"sourceType":"module"}