{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactApp\\\\heladeria-e-commerce-baladon\\\\src\\\\components\\\\sessions\\\\loginContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { ModalContext } from '../../context/modalContext';\nimport Login from './login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginContainer = _ref => {\n  _s();\n\n  let {\n    initialShow,\n    children\n  } = _ref;\n  const modalContext = useContext(ModalContext);\n  const [opened, setOpened] = useState(initialShow);\n\n  const handleClose = () => modalContext.closeModal(setOpened);\n\n  const handleOpen = () => modalContext.openModal(setOpened);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: handleOpen,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      show: opened,\n      onHide: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginContainer, \"c9M/ZG6AexO5opzBOwgRcCB5EwA=\");\n\n_c = LoginContainer;\nexport default LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/components/sessions/loginContainer.tsx"],"names":["React","useState","useContext","ModalContext","Login","LoginContainer","initialShow","children","modalContext","opened","setOpened","handleClose","closeModal","handleOpen","openModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAqDC,UAArD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAOA,MAAMC,cAAgC,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAA4B;AACpE,QAAMC,YAAY,GAAGN,UAAU,CAACC,YAAD,CAA/B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACK,WAAD,CAApC;;AAEA,QAAMK,WAAW,GAAG,MAAMH,YAAY,CAACI,UAAb,CAAwBF,SAAxB,CAA1B;;AACA,QAAMG,UAAU,GAAG,MAAML,YAAY,CAACM,SAAb,CAAuBJ,SAAvB,CAAzB;;AAEA,sBAAO;AAAA,4BAEL;AAAM,MAAA,OAAO,EAAEG,UAAf;AAAA,gBAA4BN;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFK,eAGL,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEE,MAAb;AAAqB,MAAA,MAAM,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHK;AAAA,kBAAP;AAKD,CAZD;;GAAMN,c;;KAAAA,c;AAcN,eAAeA,cAAf","sourcesContent":["import React, { useState, ReactChild, ReactChildren, useContext } from 'react'\r\nimport { ModalContext } from '../../context/modalContext';\r\nimport Login from './login';\r\n\r\ninterface IProps {\r\n  initialShow: boolean;\r\n  children: ReactChild | ReactChildren;\r\n}\r\n\r\nconst LoginContainer: React.FC<IProps> = ({initialShow, children}) => {\r\n  const modalContext = useContext(ModalContext);\r\n  const [opened, setOpened] = useState(initialShow)\r\n\r\n  const handleClose = () => modalContext.closeModal(setOpened);\r\n  const handleOpen = () => modalContext.openModal(setOpened);\r\n\r\n  return <>\r\n    {/* Children is needed to abstract the setShow hook from its parent */}\r\n    <span onClick={handleOpen}>{children}</span>\r\n    <Login show={opened} onHide={handleClose} />\r\n  </>\r\n}\r\n\r\nexport default LoginContainer;"]},"metadata":{},"sourceType":"module"}