{"ast":null,"code":"import { collection, getDocs, getFirestore } from 'firebase/firestore';\nimport ItemShowcase from '../dataTypes/itemShowcase';\n\nclass ItemHandler {\n  constructor() {\n    this.db = getFirestore();\n    this.itemCollection = collection(this.db, \"items\");\n    this.itemHandler = ItemHandler.getInstance();\n  }\n\n  static getInstance() {\n    if (!ItemHandler.instance) {\n      ItemHandler.instance = new ItemHandler();\n    }\n\n    return ItemHandler.instance;\n  }\n\n  getItems(setItems) {\n    getDocs(this.itemCollection).then(snapshot => {\n      const newItems = snapshot.docs.map(doc => {\n        //Destructuring\n        const [id, title, description, price, pictureUrl, category, stock] = [doc.id, doc.get(\"title\"), doc.get(\"description\"), doc.get(\"price\"), doc.get(\"pictureUrl\"), doc.get(\"type\"), doc.get(\"stock\")]; //If items are well defined\n\n        if (title === undefined || description === undefined || price === undefined || pictureUrl === undefined || category === undefined || stock === undefined) {\n          console.log(id, title, description, price, pictureUrl, category, stock);\n          throw new Error(\"Parámetros de items de base de datos erroneos\");\n        } else {\n          const newItem = new ItemShowcase(id, title, description, price, pictureUrl, category, stock);\n          return newItem; //map return\n        }\n      });\n      setItems(newItems);\n    });\n  }\n\n}\n\nItemHandler.instance = void 0;\nexport default ItemHandler;","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/data/itemHandler.ts"],"names":["collection","getDocs","getFirestore","ItemShowcase","ItemHandler","constructor","db","itemCollection","itemHandler","getInstance","instance","getItems","setItems","then","snapshot","newItems","docs","map","doc","id","title","description","price","pictureUrl","category","stock","get","undefined","console","log","Error","newItem"],"mappings":"AAAA,SAAQA,UAAR,EAAoCC,OAApC,EAA6CC,YAA7C,QAAgE,oBAAhE;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,WAAN,CAAkB;AAORC,EAAAA,WAAW,GAAG;AAAA,SALtBC,EAKsB,GALNJ,YAAY,EAKN;AAAA,SAJtBK,cAIsB,GAJLP,UAAU,CAAC,KAAKM,EAAN,EAAS,OAAT,CAIL;AAAA,SAFtBE,WAEsB,GAFKJ,WAAW,CAACK,WAAZ,EAEL;AAAG;;AAEA,SAAXA,WAAW,GAAgB;AACvC,QAAI,CAACL,WAAW,CAACM,QAAjB,EAA2B;AACvBN,MAAAA,WAAW,CAACM,QAAZ,GAAuB,IAAIN,WAAJ,EAAvB;AACH;;AACD,WAAOA,WAAW,CAACM,QAAnB;AACD;;AAEDC,EAAAA,QAAQ,CAACC,QAAD,EAAiD;AAEvDX,IAAAA,OAAO,CAAC,KAAKM,cAAN,CAAP,CAA6BM,IAA7B,CAAkCC,QAAQ,IAAI;AAC5C,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACxC;AACA,cAAM,CAACC,EAAD,EAAKC,KAAL,EAAYC,WAAZ,EAAyBC,KAAzB,EAAgCC,UAAhC,EAA4CC,QAA5C,EAAsDC,KAAtD,IAEE,CAACP,GAAG,CAACC,EAAL,EAASD,GAAG,CAACQ,GAAJ,CAAQ,OAAR,CAAT,EAA2BR,GAAG,CAACQ,GAAJ,CAAQ,aAAR,CAA3B,EAAmDR,GAAG,CAACQ,GAAJ,CAAQ,OAAR,CAAnD,EAAqER,GAAG,CAACQ,GAAJ,CAAQ,YAAR,CAArE,EAA4FR,GAAG,CAACQ,GAAJ,CAAQ,MAAR,CAA5F,EAA6GR,GAAG,CAACQ,GAAJ,CAAQ,OAAR,CAA7G,CAFR,CAFwC,CAMxC;;AACA,YAAIN,KAAK,KAAKO,SAAV,IAAuBN,WAAW,KAAKM,SAAvC,IAAoDL,KAAK,KAAKK,SAA9D,IAA2EJ,UAAU,KAAKI,SAA1F,IAAuGH,QAAQ,KAAKG,SAApH,IAAiIF,KAAK,KAAKE,SAA/I,EAA2J;AACvJC,UAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ,EAAeC,KAAf,EAAqBC,WAArB,EAAiCC,KAAjC,EAAuCC,UAAvC,EAAkDC,QAAlD,EAA2DC,KAA3D;AACA,gBAAM,IAAIK,KAAJ,CAAU,+CAAV,CAAN;AACH,SAHD,MAIK;AACD,gBAAMC,OAAO,GAAG,IAAI5B,YAAJ,CAAiBgB,EAAjB,EAAqBC,KAArB,EAA4BC,WAA5B,EAAyCC,KAAzC,EAAgDC,UAAhD,EAA4DC,QAA5D,EAAsEC,KAAtE,CAAhB;AACA,iBAAOM,OAAP,CAFC,CAEe;AACnB;AACF,OAfgB,CAAjB;AAgBAnB,MAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,KAlBD;AAmBD;;AArCe;;AAAZX,W,CACWM,Q;AAuCjB,eAAeN,WAAf","sourcesContent":["import {collection, doc, Firestore, getDocs, getFirestore} from 'firebase/firestore';\r\nimport Category from '../dataTypes/category';\r\nimport ItemShowcase from '../dataTypes/itemShowcase';\r\n\r\nclass ItemHandler {\r\n  private static instance: ItemHandler;\r\n  db: Firestore = getFirestore();\r\n  itemCollection = collection(this.db,\"items\");\r\n\r\n  itemHandler: ItemHandler = ItemHandler.getInstance();\r\n\r\n  private constructor() { }\r\n\r\n  public static getInstance(): ItemHandler {\r\n    if (!ItemHandler.instance) {\r\n        ItemHandler.instance = new ItemHandler();\r\n    }\r\n    return ItemHandler.instance;\r\n  }\r\n\r\n  getItems(setItems: (item: ItemShowcase[]) => void): void {\r\n\r\n    getDocs(this.itemCollection).then(snapshot => {\r\n      const newItems = snapshot.docs.map(doc => {\r\n        //Destructuring\r\n        const [id, title, description, price, pictureUrl, category, stock]: \r\n                [string, string | undefined, string | undefined, number | undefined, string | undefined, Category | undefined, number | undefined] =\r\n                [doc.id, doc.get(\"title\"), doc.get(\"description\"), doc.get(\"price\"), doc.get(\"pictureUrl\"), doc.get(\"type\"), doc.get(\"stock\")]\r\n        \r\n        //If items are well defined\r\n        if (title === undefined || description === undefined || price === undefined || pictureUrl === undefined || category === undefined || stock === undefined ) {\r\n            console.log(id,title,description,price,pictureUrl,category,stock)\r\n            throw new Error(\"Parámetros de items de base de datos erroneos\");\r\n        }\r\n        else {\r\n            const newItem = new ItemShowcase(id, title, description, price, pictureUrl, category, stock);\r\n            return newItem; //map return\r\n        }\r\n      })\r\n      setItems(newItems);\r\n    })\r\n  }\r\n}\r\n\r\nexport default ItemHandler\r\n;\r\n\r\n"]},"metadata":{},"sourceType":"module"}