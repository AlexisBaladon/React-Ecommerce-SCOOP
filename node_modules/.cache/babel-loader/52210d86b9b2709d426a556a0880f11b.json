{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactApp\\\\heladeria-e-commerce-baladon\\\\src\\\\components\\\\items\\\\list\\\\itemListContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ItemList from './itemList';\nimport Loading from '../../loading/loading';\nimport './itemListContainer.css';\nimport { getItems } from '../../../data/itemHandler';\nimport { DatabaseContext } from '../../../context/databaseContext';\nimport { Firestore } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = () => {\n  _s();\n\n  //Database\n  const databaseContext = useContext(DatabaseContext);\n  const db = databaseContext.db; //Parameters\n\n  const {\n    id\n  } = useParams(); //Showed items\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    //SetItem shouldn't be usesd after being unmounted\n    let isMounted = true;\n\n    const setIfMounted = item => {\n      if (isMounted) setItems(item);\n    }; //Filters items by category\n\n\n    const catFilter = i => i.category === id; //Filters items in case of defining category\n\n\n    console.log('asd');\n\n    if (db instanceof Firestore) {\n      id ? getItems(db, setIfMounted) : //getPromiseFilteredItems(catFilter, setIfMounted) :\n      getItems(db, setIfMounted); //(setIfMounted);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"item-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"store-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"greeting\",\n          children: \"Pide tus helados antes de que se derritan!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"product-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tienda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), items.length ? /*#__PURE__*/_jsxDEV(ItemList, {\n            items: items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ItemListContainer, \"vmDvcB7dSTKBdos6IWK7IgjY76o=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/components/items/list/itemListContainer.tsx"],"names":["React","useContext","useEffect","useState","useParams","ItemList","Loading","getItems","DatabaseContext","Firestore","ItemListContainer","databaseContext","db","id","items","setItems","isMounted","setIfMounted","item","catFilter","i","category","console","log","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAIA,OAAO,yBAAP;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAAQC,eAAR,QAA8B,kCAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;;AAEA,MAAMC,iBAA+B,GAAG,MAAM;AAAA;;AAE5C;AACA,QAAMC,eAAe,GAAGV,UAAU,CAACO,eAAD,CAAlC;AACA,QAAMI,EAAE,GAAGD,eAAe,CAACC,EAA3B,CAJ4C,CAM5C;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAST,SAAS,EAAxB,CAP4C,CAS5C;;AACA,QAAM,CAACU,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAiB,EAAjB,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,QAAIc,SAAS,GAAG,IAAhB;;AACA,UAAMC,YAAY,GAAIC,IAAD,IAA0B;AAC7C,UAAIF,SAAJ,EAAeD,QAAQ,CAACG,IAAD,CAAR;AAChB,KAFD,CAJc,CAQd;;;AACA,UAAMC,SAAS,GAAIC,CAAD,IAA8BA,CAAC,CAACC,QAAF,KAAeR,EAA/D,CATc,CAWd;;;AACJS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACI,QAAIX,EAAE,YAAYH,SAAlB,EAA6B;AAC3BI,MAAAA,EAAE,GACFN,QAAQ,CAACK,EAAD,EAAKK,YAAL,CADN,GACyB;AAC3BV,MAAAA,QAAQ,CAACK,EAAD,EAAKK,YAAL,CAFR,CAD2B,CAGA;AAC5B;;AAED,WAAO,MAAM;AAACD,MAAAA,SAAS,GAAG,KAAZ;AAAkB,KAAhC;AACD,GApBQ,EAoBN,CAACH,EAAD,CApBM,CAAT;AAsBA,sBAAO;AAAA,2BACL;AAAK,MAAA,EAAE,EAAC,qBAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,+BACE;AAAI,UAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA,+BACE;AAAK,UAAA,SAAS,EAAE,4BAAhB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGC,KAAK,CAACU,MAAN,gBACD,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEV;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADC,gBAED,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,mBAAP;AAgBD,CAlDD;;GAAMJ,iB;UAOWN,S;;;KAPXM,iB;AAoDN,eAAeA,iBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ItemList from './itemList'\r\nimport Loading from '../../loading/loading';\r\n\r\nimport ItemShowcase from '../../../dataTypes/itemShowcase'\r\n\r\nimport './itemListContainer.css';\r\nimport { getItems } from '../../../data/itemHandler';\r\nimport {DatabaseContext} from '../../../context/databaseContext';\r\nimport { Firestore } from 'firebase/firestore';\r\n\r\nconst ItemListContainer: React.FC<{}> = () => {\r\n\r\n  //Database\r\n  const databaseContext = useContext(DatabaseContext)\r\n  const db = databaseContext.db;\r\n\r\n  //Parameters\r\n  const { id } = useParams<{id?: string}>();\r\n\r\n  //Showed items\r\n  const [items,setItems] = useState<ItemShowcase[]>([]);\r\n\r\n  useEffect(() => {\r\n\r\n    //SetItem shouldn't be usesd after being unmounted\r\n    let isMounted = true;\r\n    const setIfMounted = (item: ItemShowcase[]) => {\r\n      if (isMounted) setItems(item);\r\n    }\r\n\r\n    //Filters items by category\r\n    const catFilter = (i: ItemShowcase): boolean => i.category === id;\r\n\r\n    //Filters items in case of defining category\r\nconsole.log('asd')\r\n    if (db instanceof Firestore) {\r\n      id ? \r\n      getItems(db, setIfMounted)://getPromiseFilteredItems(catFilter, setIfMounted) :\r\n      getItems(db, setIfMounted);//(setIfMounted);\r\n    }\r\n\r\n    return () => {isMounted = false};\r\n  }, [id]);\r\n  \r\n  return <>\r\n    <div id=\"item-list-container\">\r\n      <div id=\"store-title\">\r\n        <h2 id=\"greeting\">Pide tus helados antes de que se derritan!</h2>\r\n      </div>\r\n      <div id=\"product-list\">\r\n        <div className= \"row justify-content-center\">\r\n          <h2>Tienda</h2>\r\n          {items.length?\r\n          <ItemList items={items} />:\r\n          <Loading />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default ItemListContainer;"]},"metadata":{},"sourceType":"module"}