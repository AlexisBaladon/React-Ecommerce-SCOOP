{"ast":null,"code":"import { collection, getDocs, getFirestore, query } from 'firebase/firestore';\nimport Flavor from '../dataTypes/flavor';\n\nconst createItemAux = document => {\n  let newFlavor = null; //Destructuring\n\n  const [id, title, pictureUrl] = [document.id, document.get(\"title\"), document.get(\"pictureUrl\")]; //If items are well defined\n\n  if (title === undefined || pictureUrl === undefined) {\n    throw new Error(\"Par치metros de items de base de datos err칩neos\");\n  } else {\n    newFlavor = new Flavor(id, title, pictureUrl);\n  }\n\n  return newFlavor;\n};\n\nconst getFlavors = setFlavors => {\n  const db = getFirestore();\n  const itemCollection = query(collection(db, \"flavors\"));\n  getDocs(itemCollection).then(snapshot => {\n    const newFlavor = snapshot.docs.map(doc => {\n      return createItemAux(doc);\n    });\n    setFlavors(newFlavor);\n  });\n};\n\nexport { getFlavors };","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/data/flavorHandler.ts"],"names":["collection","getDocs","getFirestore","query","Flavor","createItemAux","document","newFlavor","id","title","pictureUrl","get","undefined","Error","getFlavors","setFlavors","db","itemCollection","then","snapshot","docs","map","doc"],"mappings":"AAAA,SAAQA,UAAR,EAA4EC,OAA5E,EAAqFC,YAArF,EAA4GC,KAA5G,QAA+H,oBAA/H;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGE,MAAMC,aAAa,GAAIC,QAAD,IAAsD;AAC5E,MAAIC,SAAS,GAAG,IAAhB,CAD4E,CAG5E;;AACA,QAAM,CAACC,EAAD,EAAKC,KAAL,EAAYC,UAAZ,IAEN,CAACJ,QAAQ,CAACE,EAAV,EAAcF,QAAQ,CAACK,GAAT,CAAa,OAAb,CAAd,EAAqCL,QAAQ,CAACK,GAAT,CAAa,YAAb,CAArC,CAFA,CAJ4E,CAQ5E;;AACA,MAAIF,KAAK,KAAKG,SAAV,IAAuBF,UAAU,KAAKE,SAA1C,EAAqD;AACnD,UAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD,GAFD,MAGK;AACHN,IAAAA,SAAS,GAAG,IAAIH,MAAJ,CAAWI,EAAX,EAAeC,KAAf,EAAsBC,UAAtB,CAAZ;AACD;;AAED,SAAOH,SAAP;AACD,CAjBC;;AAmBA,MAAMO,UAAU,GAAIC,UAAD,IAAgD;AACjE,QAAMC,EAAE,GAAGd,YAAY,EAAvB;AACA,QAAMe,cAAc,GAAGd,KAAK,CAACH,UAAU,CAACgB,EAAD,EAAI,SAAJ,CAAX,CAA5B;AAEAf,EAAAA,OAAO,CAACgB,cAAD,CAAP,CAAwBC,IAAxB,CAA6BC,QAAQ,IAAI;AACvC,UAAMZ,SAAS,GAAGY,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACzC,aAAOjB,aAAa,CAACiB,GAAD,CAApB;AACD,KAFiB,CAAlB;AAGAP,IAAAA,UAAU,CAACR,SAAD,CAAV;AACD,GALD;AAMD,CAVD;;AAYA,SAAQO,UAAR","sourcesContent":["import {collection, doc, DocumentData, DocumentSnapshot, Firestore, getDoc, getDocs, getFirestore, orderBy, query, where} from 'firebase/firestore';\r\nimport Flavor from '../dataTypes/flavor';\r\n\r\n\r\n  const createItemAux = (document: DocumentSnapshot<DocumentData>): Flavor => {\r\n  let newFlavor = null;\r\n  \r\n  //Destructuring\r\n  const [id, title, pictureUrl]: \r\n  [string | undefined, string | undefined, string | undefined] =\r\n  [document.id, document.get(\"title\"), document.get(\"pictureUrl\")]\r\n  \r\n  //If items are well defined\r\n  if (title === undefined || pictureUrl === undefined) {\r\n    throw new Error(\"Par치metros de items de base de datos err칩neos\");\r\n  }\r\n  else {\r\n    newFlavor = new Flavor(id, title, pictureUrl);\r\n  }\r\n\r\n  return newFlavor;\r\n}\r\n  \r\n  const getFlavors = (setFlavors: (item: Flavor[]) => void): void => {\r\n    const db = getFirestore()\r\n    const itemCollection = query(collection(db,\"flavors\"));\r\n  \r\n    getDocs(itemCollection).then(snapshot => {\r\n      const newFlavor = snapshot.docs.map(doc => {\r\n        return createItemAux(doc);\r\n      })\r\n      setFlavors(newFlavor);\r\n    })\r\n  }\r\n\r\n  export {getFlavors};"]},"metadata":{},"sourceType":"module"}