{"ast":null,"code":"import { obtenerHelados } from '../data/helados';\n\nconst obtenerPromiseHelados = (helados, setHelados) => {\n  const heladosPromise = new Promise((resolve, reject) => {\n    const heladosDB = obtenerHelados();\n\n    if (heladosDB.length === 0) {\n      throw new Error('No se han encontrado helados!');\n    }\n\n    setTimeout(() => {\n      resolve(heladosDB);\n    }, 2000);\n  }).then(result => {\n    setHelados(result);\n    console.log('Helados: ' + helados);\n  }).catch(err => {\n    console.log(err);\n  }).finally(() => {\n    console.log('Fin de promesa de helados!');\n  });\n};\n\nexport { obtenerPromiseHelados };","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/logic/promises.ts"],"names":["obtenerHelados","obtenerPromiseHelados","helados","setHelados","heladosPromise","Promise","resolve","reject","heladosDB","length","Error","setTimeout","then","result","console","log","catch","err","finally"],"mappings":"AACA,SAAQA,cAAR,QAA6B,iBAA7B;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,OAAD,EAAoBC,UAApB,KAAmD;AAC/E,QAAMC,cAAc,GAAG,IAAIC,OAAJ,CAAsB,CAACC,OAAD,EAASC,MAAT,KAAoB;AAC/D,UAAMC,SAAmB,GAAGR,cAAc,EAA1C;;AACA,QAAIQ,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;;AACDC,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,OAAO,CAACE,SAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GARsB,EASvBI,IATuB,CASjBC,MAAD,IAAsB;AACzBV,IAAAA,UAAU,CAACU,MAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcb,OAA1B;AACD,GAZsB,EAatBc,KAbsB,CAafC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAfsB,EAgBtBC,OAhBsB,CAgBd,MAAM;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAlBsB,CAAvB;AAmBD,CApBD;;AAsBA,SAAQd,qBAAR","sourcesContent":["import Helado from '../dataTypes/helado';\r\nimport {obtenerHelados} from '../data/helados';\r\n\r\nconst obtenerPromiseHelados = (helados: Helado[], setHelados: Function): void => {\r\n  const heladosPromise = new Promise<Helado[]>((resolve,reject) => {\r\n    const heladosDB: Helado[] = obtenerHelados();\r\n    if (heladosDB.length === 0) {\r\n      throw new Error('No se han encontrado helados!');\r\n    }\r\n    setTimeout(() => {\r\n      resolve(heladosDB);\r\n    }, 2000);\r\n  }).\r\n  then((result: Helado[]) => {\r\n    setHelados(result);\r\n    console.log('Helados: ' + helados);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    console.log('Fin de promesa de helados!');\r\n  });\r\n}\r\n\r\nexport {obtenerPromiseHelados};"]},"metadata":{},"sourceType":"module"}