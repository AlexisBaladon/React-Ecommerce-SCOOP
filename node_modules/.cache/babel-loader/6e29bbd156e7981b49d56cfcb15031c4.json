{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactApp\\\\heladeria-e-commerce-baladon\\\\src\\\\context\\\\sessionContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { auth } from '../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionContext = /*#__PURE__*/React.createContext({\n  loggedUser: null,\n  signup: (email, password) => new Promise(r => {}),\n  login: (email, password) => new Promise(r => {}),\n  logout: () => new Promise(r => {})\n}); //Doesn't let more than one modal to be opened at once\n\nconst SessionProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loggedUser, setLoggedUser] = useState(null);\n  useEffect(() => {\n    const unsuscribe = auth.onAuthStateChanged(user => {\n      setLoggedUser(user);\n    });\n    return unsuscribe;\n  }, []);\n\n  const signup = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const logout = () => {\n    return auth.signOut();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: {\n      loggedUser,\n      signup,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SessionProvider, \"v7vfV9ef/9Dakj9pijlUjJz+zRY=\");\n\n_c = SessionProvider;\nexport { SessionContext, SessionProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/context/sessionContext.tsx"],"names":["React","useEffect","useState","auth","SessionContext","createContext","loggedUser","signup","email","password","Promise","r","login","logout","SessionProvider","children","setLoggedUser","unsuscribe","onAuthStateChanged","user","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,UAArB;;AAGA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,CAQpB;AACCC,EAAAA,UAAU,EAAE,IADb;AAECC,EAAAA,MAAM,EAAE,CAACC,KAAD,EAAgBC,QAAhB,KAAqC,IAAIC,OAAJ,CAAYC,CAAC,IAAI,CAAE,CAAnB,CAF9C;AAGCC,EAAAA,KAAK,EAAE,CAACJ,KAAD,EAAgBC,QAAhB,KAAqC,IAAIC,OAAJ,CAAYC,CAAC,IAAI,CAAE,CAAnB,CAH7C;AAICE,EAAAA,MAAM,EAAE,MAAM,IAAIH,OAAJ,CAAYC,CAAC,IAAI,CAAE,CAAnB;AAJf,CARoB,CAAvB,C,CAeA;;AACA,MAAMG,eAA6B,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACpD,QAAM,CAACT,UAAD,EAAaU,aAAb,IAA8Bd,QAAQ,CAAuB,IAAvB,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,UAAU,GAAGd,IAAI,CAACe,kBAAL,CAAwBC,IAAI,IAAI;AAC/CH,MAAAA,aAAa,CAACG,IAAD,CAAb;AACH,KAFkB,CAAnB;AAIA,WAAOF,UAAP;AACD,GANQ,EAMN,EANM,CAAT;;AASA,QAAMV,MAAM,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAmD;AAChE,WAAON,IAAI,CAACiB,8BAAL,CAAoCZ,KAApC,EAA0CC,QAA1C,CAAP;AACD,GAFD;;AAIA,QAAMG,KAAK,GAAG,CAACJ,KAAD,EAAgBC,QAAhB,KAAqC;AACjD,WAAON,IAAI,CAACkB,0BAAL,CAAgCb,KAAhC,EAAuCC,QAAvC,CAAP;AACD,GAFD;;AAIA,QAAMI,MAAM,GAAG,MAAM;AACnB,WAAOV,IAAI,CAACmB,OAAL,EAAP;AACD,GAFD;;AAIA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AAAChB,MAAAA,UAAD;AACCC,MAAAA,MADD;AAECK,MAAAA,KAFD;AAGCC,MAAAA;AAHD,KADT;AAAA,cAMGE;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlCD;;GAAMD,e;;KAAAA,e;AAoCN,SAAQV,cAAR,EAAwBU,eAAxB","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { auth } from '../index'\r\nimport fireBase from \"firebase/compat/app\";\r\n\r\nconst SessionContext = React.createContext<{\r\n    loggedUser: fireBase.User | null,\r\n    signup(email: string, password: string): Promise<any>;\r\n    login(email: string, password: string): Promise<any>;\r\n    logout(): Promise<any>,\r\n  }>\r\n\r\n  //default values                                    \r\n  ({\r\n    loggedUser: null,\r\n    signup: (email: string, password: string) => new Promise(r => {}),\r\n    login: (email: string, password: string) => new Promise(r => {}),\r\n    logout: () => new Promise(r => {}),\r\n  });\r\n\r\n//Doesn't let more than one modal to be opened at once\r\nconst SessionProvider: React.FC<{}> = ({children}) => {\r\n  const [loggedUser, setLoggedUser] = useState<fireBase.User | null>(null)\r\n  \r\n  useEffect(() => {\r\n    const unsuscribe = auth.onAuthStateChanged(user => {\r\n        setLoggedUser(user);\r\n    })\r\n\r\n    return unsuscribe;\r\n  }, [])\r\n  \r\n\r\n  const signup = (email: string, password: string): Promise<any> => {\r\n    return auth.createUserWithEmailAndPassword(email,password);\r\n  }\r\n\r\n  const login = (email: string, password: string) => {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  const logout = () => {\r\n    return auth.signOut();\r\n  }\r\n\r\n  return (\r\n    <SessionContext.Provider \r\n      value={{loggedUser,\r\n              signup,\r\n              login,\r\n              logout,\r\n             }}>\r\n      {children}\r\n    </SessionContext.Provider>\r\n  )\r\n}\r\n\r\nexport {SessionContext, SessionProvider}"]},"metadata":{},"sourceType":"module"}