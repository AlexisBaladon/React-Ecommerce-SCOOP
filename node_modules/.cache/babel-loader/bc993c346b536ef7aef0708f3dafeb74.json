{"ast":null,"code":"import Helado from '../dataTypes/helado';\nconst helados = [\n/*          id|imagen        | nombre               stock|descuento*/\nnew Helado(1, './default.png', 'Chocolate', 10), new Helado(2, './default.png', 'Dulce de Leche', 0, 20), new Helado(3, './default.png', 'Frambuesa', 2), new Helado(4, './default.png', 'Lemon Pie', 1), new Helado(5, './default.png', 'Maracuy치', 7, 1), new Helado(6, './default.png', 'Frutilla', 16), new Helado(7, './default.png', 'Vainilla', 22, 25), new Helado(8, './default.png', 'Lim칩n', 4)];\n\nconst obtenerHelados = () => helados;\n\nconst obtenerHeladosPromise = () => {\n  let result = [];\n  const heladosPromise = new Promise((resolve, reject) => {\n    if (helados.length === 0) {\n      throw new Error('No se han encontrado helados!');\n    }\n\n    setTimeout(() => {\n      resolve(helados);\n    }, 2000);\n  }).then(result => {\n    result = result;\n    console.log(helados);\n  }).catch(err => {\n    console.log(err);\n  }).finally(() => {\n    console.log('Fin de promesa de helados!');\n  });\n  return result;\n};\n\nexport { obtenerHelados, obtenerHeladosPromise };","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/data/helados.ts"],"names":["Helado","helados","obtenerHelados","obtenerHeladosPromise","result","heladosPromise","Promise","resolve","reject","length","Error","setTimeout","then","console","log","catch","err","finally"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,OAAiB,GAAG;AAC1B;AACE,IAAID,MAAJ,CAAW,CAAX,EAAa,eAAb,EAA6B,WAA7B,EAAoD,EAApD,CAFwB,EAGxB,IAAIA,MAAJ,CAAW,CAAX,EAAa,eAAb,EAA6B,gBAA7B,EAAoD,CAApD,EAAyD,EAAzD,CAHwB,EAIxB,IAAIA,MAAJ,CAAW,CAAX,EAAa,eAAb,EAA6B,WAA7B,EAAoD,CAApD,CAJwB,EAKxB,IAAIA,MAAJ,CAAW,CAAX,EAAa,eAAb,EAA6B,WAA7B,EAAoD,CAApD,CALwB,EAMxB,IAAIA,MAAJ,CAAW,CAAX,EAAa,eAAb,EAA6B,UAA7B,EAAoD,CAApD,EAAyD,CAAzD,CANwB,EAOxB,IAAIA,MAAJ,CAAW,CAAX,EAAa,eAAb,EAA6B,UAA7B,EAAoD,EAApD,CAPwB,EAQxB,IAAIA,MAAJ,CAAW,CAAX,EAAa,eAAb,EAA6B,UAA7B,EAAoD,EAApD,EAAyD,EAAzD,CARwB,EASxB,IAAIA,MAAJ,CAAW,CAAX,EAAa,eAAb,EAA6B,OAA7B,EAAoD,CAApD,CATwB,CAA1B;;AAYA,MAAME,cAAc,GAAG,MAAgBD,OAAvC;;AAEA,MAAME,qBAAqB,GAAG,MAAgB;AAC5C,MAAIC,MAAgB,GAAG,EAAvB;AACA,QAAMC,cAAc,GAAG,IAAIC,OAAJ,CAAsB,CAACC,OAAD,EAASC,MAAT,KAAoB;AAC/D,QAAIP,OAAO,CAACQ,MAAR,KAAmB,CAAvB,EAA0B;AACxB,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;;AACDC,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,OAAO,CAACN,OAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAPsB,EAOpBW,IAPoB,CAOdR,MAAD,IAAsB;AAC5BA,IAAAA,MAAM,GAAGA,MAAT;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACD,GAVsB,EAWtBc,KAXsB,CAWfC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAbsB,EActBC,OAdsB,CAcd,MAAM;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAhBsB,CAAvB;AAkBA,SAAOV,MAAP;AACD,CArBD;;AAuBA,SAAQF,cAAR,EAAwBC,qBAAxB","sourcesContent":["import Helado from '../dataTypes/helado';\r\n\r\nconst helados: Helado[] = [\r\n/*          id|imagen        | nombre               stock|descuento*/\r\n  new Helado(1,'./default.png','Chocolate'           ,10     ),\r\n  new Helado(2,'./default.png','Dulce de Leche'      ,0   ,20),\r\n  new Helado(3,'./default.png','Frambuesa'           ,2      ),\r\n  new Helado(4,'./default.png','Lemon Pie'           ,1      ),\r\n  new Helado(5,'./default.png','Maracuy치'            ,7   ,1 ),\r\n  new Helado(6,'./default.png','Frutilla'            ,16     ),\r\n  new Helado(7,'./default.png','Vainilla'            ,22  ,25),\r\n  new Helado(8,'./default.png','Lim칩n'               ,4      ),\r\n];\r\n\r\nconst obtenerHelados = (): Helado[] => helados;\r\n\r\nconst obtenerHeladosPromise = (): Helado[] => {\r\n  let result: Helado[] = [];\r\n  const heladosPromise = new Promise<Helado[]>((resolve,reject) => {\r\n    if (helados.length === 0) {\r\n      throw new Error('No se han encontrado helados!');\r\n    }\r\n    setTimeout(() => {\r\n      resolve(helados);\r\n    }, 2000);\r\n  }).then((result: Helado[]) => {\r\n    result = result;\r\n    console.log(helados);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    console.log('Fin de promesa de helados!');\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport {obtenerHelados, obtenerHeladosPromise};"]},"metadata":{},"sourceType":"module"}