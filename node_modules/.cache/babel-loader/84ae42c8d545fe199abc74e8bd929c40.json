{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactApp\\\\heladeria-e-commerce-baladon\\\\src\\\\components\\\\items\\\\detail\\\\itemChooser.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DtItem from '../../../dataTypes/item';\nimport './itemChooser.css';\nimport ModalRecipientes from './itemChooserModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemChooser = _ref => {\n  _s();\n\n  let {\n    imgWidth,\n    items,\n    selectedItems,\n    setSelectedItems\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [changedItemIndex, setChangedItemIndex] = useState(0);\n\n  const selectItemById = newItemId => {\n    let newSelectedItems = selectedItems;\n    const newItem = items.find(i => i.id === newItemId);\n\n    if (newItem instanceof DtItem) {\n      newSelectedItems[changedItemIndex] = newItem;\n      setSelectedItems(newSelectedItems);\n    } else {\n      console.warn(\"Changed item couldn't be finded\");\n    }\n  }; //numImages destructuring\n\n\n  const numImages = selectedItems.length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalRecipientes, {\n      items: items,\n      show: show,\n      onHide: () => setShow(false),\n      selectItemById: selectItemById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"img-container-item-choser\",\n      style: {\n        overflow: \"hidden\",\n        width: \"100%\"\n      },\n      children: selectedItems.map((dtItem, i) => {\n        //Item destructuring\n        const [pictureUrl, title] = [dtItem.pictureUrl, dtItem.title];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\",\n            height: \"100%\",\n            overflow: \"hidden\",\n            width: imgWidth / numImages + \"px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"100%\",\n              width: imgWidth / numImages + \"px\",\n              position: \"absolute\",\n              left: `${i * 100 / numImages}%`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"selected-image-item-choser\",\n              onClick: () => {\n                setShow(true);\n                setChangedItemIndex(i);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"img-item-choser\",\n                style: {\n                  height: \"100%\",\n                  overflow: \"hidden\"\n                },\n                width: imgWidth + \"px\",\n                src: window.location.origin + pictureUrl,\n                alt: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ItemChooser, \"olS1bljV7c6tA74OOyRoPrQwCJg=\");\n\n_c = ItemChooser;\nexport default ItemChooser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemChooser\");","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/components/items/detail/itemChooser.tsx"],"names":["React","useState","DtItem","ModalRecipientes","ItemChooser","imgWidth","items","selectedItems","setSelectedItems","show","setShow","changedItemIndex","setChangedItemIndex","selectItemById","newItemId","newSelectedItems","newItem","find","i","id","console","warn","numImages","length","overflow","width","map","dtItem","pictureUrl","title","position","height","left","window","location","origin"],"mappings":"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","sourcesContent":["import { url } from 'inspector';\r\nimport React, { useState } from 'react'\r\n\r\nimport DtItem from '../../../dataTypes/item';\r\n\r\nimport './itemChooser.css'\r\nimport ModalRecipientes from './itemChooserModal';\r\n\r\ninterface IProps {\r\n  imgWidth: number;\r\n  items: DtItem[];\r\n  selectedItems: DtItem[];\r\n  setSelectedItems: any;\r\n}\r\n\r\nconst ItemChooser: React.FC<IProps> = ({imgWidth, items, selectedItems, setSelectedItems}) => {\r\n  const [show, setShow] = useState<boolean>(false);\r\n  const [changedItemIndex, setChangedItemIndex] = useState<number>(0);\r\n\r\n  const selectItemById = (newItemId: number) => {\r\n    let newSelectedItems = selectedItems;\r\n    const newItem = items.find(i => i.id === newItemId)\r\n\r\n    if (newItem instanceof DtItem) {\r\n      newSelectedItems[changedItemIndex] = newItem;\r\n      setSelectedItems(newSelectedItems);\r\n    }\r\n    else {\r\n      console.warn(\"Changed item couldn't be finded\");\r\n    }\r\n  }\r\n  \r\n\r\n  //numImages destructuring\r\n  const numImages: number = selectedItems.length;\r\n\r\n  return <>\r\n    <ModalRecipientes items={items} show={show} onHide={() => setShow(false)}\r\n                      selectItemById={selectItemById}/>\r\n    <div id=\"img-container-item-choser\" style={{overflow: \"hidden\", width: \"100%\"}}>\r\n      {selectedItems.map((dtItem, i) => {\r\n\r\n      //Item destructuring\r\n        const [pictureUrl, title]: [string, string] = \r\n              [dtItem.pictureUrl, dtItem.title];\r\n\r\n        return <div style={{ position: \"relative\", height: \"100%\", overflow:\"hidden\", width: imgWidth/numImages+\"px\"}}> \r\n        <div key={i}style={{height: \"100%\", width: imgWidth/numImages+\"px\", position: \"absolute\", left: `${i*100/numImages}%`}} >\r\n          <span className=\"selected-image-item-choser\" onClick={() => {setShow(true); setChangedItemIndex(i);}}>\r\n              <img \r\n                  className=\"img-item-choser\"\r\n                  style={{height: \"100%\", overflow:\"hidden\"}}\r\n                  width={imgWidth+\"px\"}\r\n                  src={window.location.origin + pictureUrl}\r\n                  alt={title}\r\n                  />\r\n          </span>\r\n        </div>\r\n    </div>\r\n        })}\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default ItemChooser;"]},"metadata":{},"sourceType":"module"}