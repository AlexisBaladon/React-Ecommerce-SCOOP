{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactApp\\\\heladeria-e-commerce-baladon\\\\src\\\\context\\\\modalContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/React.createContext({\n  openLoginModal: () => {},\n  closeLoginModal: () => {},\n  isLoginOpened: false,\n  openRegisterModal: () => {},\n  closeRegisterModal: () => {},\n  isRegisterOpened: false\n}); //Doesn't let more than one modal to be opened at once\n\nconst ModalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoginOpened, setLoginOpened] = useState(false);\n  const [isRegisterOpened, setRegisterOpened] = useState(false);\n  const [openedCollection, setOpenedCollection] = useState([]); // Auxiliar functions\n\n  const closeEverything = () => {\n    openedCollection.forEach(setOpen => {\n      setOpen(false);\n    });\n    setOpenedCollection([]);\n  };\n\n  const openModal = setOpenedParam => {\n    closeEverything();\n    setOpenedParam(true);\n    setOpenedCollection([...openedCollection, setOpenedParam]);\n  };\n\n  const closeModal = setOpenedParam => {\n    const setOpened = openedCollection.find(set => set === setOpenedParam);\n    console.log(openedCollection);\n\n    if (setOpened !== undefined) {\n      setOpened(false);\n      let openedCol = openedCollection.slice();\n      openedCol.filter(set => set !== setOpened);\n      setOpenedCollection(openedCol);\n    }\n  }; // Sent functions\n\n\n  const openLoginModal = () => openModal(setLoginOpened);\n\n  const closeLoginModal = () => closeModal(setLoginOpened);\n\n  const openRegisterModal = () => openModal(setRegisterOpened);\n\n  const closeRegisterModal = () => openModal(setRegisterOpened);\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      openLoginModal: openLoginModal,\n      closeLoginModal: closeLoginModal,\n      isLoginOpened: isLoginOpened,\n      openRegisterModal: openRegisterModal,\n      closeRegisterModal: closeRegisterModal,\n      isRegisterOpened: isRegisterOpened\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalProvider, \"fSxwrkb3utWyH4+hMFa/nqAB8j0=\");\n\n_c = ModalProvider;\nexport { ModalContext, ModalProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/context/modalContext.tsx"],"names":["React","useState","ModalContext","createContext","openLoginModal","closeLoginModal","isLoginOpened","openRegisterModal","closeRegisterModal","isRegisterOpened","ModalProvider","children","setLoginOpened","setRegisterOpened","openedCollection","setOpenedCollection","closeEverything","forEach","setOpen","openModal","setOpenedParam","closeModal","setOpened","find","set","console","log","undefined","openedCol","slice","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,YAAY,gBAAGF,KAAK,CAACG,aAAN,CAUlB;AACCC,EAAAA,cAAc,EAAE,MAAM,CAAE,CADzB;AAECC,EAAAA,eAAe,EAAE,MAAM,CAAE,CAF1B;AAGCC,EAAAA,aAAa,EAAE,KAHhB;AAICC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CAJ5B;AAKCC,EAAAA,kBAAkB,EAAE,MAAM,CAAE,CAL7B;AAMCC,EAAAA,gBAAgB,EAAE;AANnB,CAVkB,CAArB,C,CAmBA;;AACA,MAAMC,aAA2B,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAClD,QAAM,CAACL,aAAD,EAAgBM,cAAhB,IAAkCX,QAAQ,CAAU,KAAV,CAAhD;AACA,QAAM,CAACQ,gBAAD,EAAmBI,iBAAnB,IAAwCZ,QAAQ,CAAU,KAAV,CAAtD;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAkD,EAAlD,CAAxD,CAHkD,CAKlD;;AACA,QAAMe,eAAe,GAAG,MAAM;AAC5BF,IAAAA,gBAAgB,CAACG,OAAjB,CAA0BC,OAAD,IAAa;AACpCA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAFD;AAGAH,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD,GALD;;AAOA,QAAMI,SAAS,GAAIC,cAAD,IAAmE;AACnFJ,IAAAA,eAAe;AACfI,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAL,IAAAA,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,EAAsBM,cAAtB,CAAD,CAAnB;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAID,cAAD,IAAmE;AACpF,UAAME,SAAS,GAAGR,gBAAgB,CAACS,IAAjB,CAAsBC,GAAG,IAAIA,GAAG,KAAKJ,cAArC,CAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYZ,gBAAZ;;AACA,QAAIQ,SAAS,KAAKK,SAAlB,EAA6B;AAC3BL,MAAAA,SAAS,CAAC,KAAD,CAAT;AAEA,UAAIM,SAAS,GAAGd,gBAAgB,CAACe,KAAjB,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiBN,GAAG,IAAIA,GAAG,KAAKF,SAAhC;AACAP,MAAAA,mBAAmB,CAACa,SAAD,CAAnB;AACD;AACF,GAVD,CAnBkD,CA+BlD;;;AACA,QAAMxB,cAAc,GAAG,MAAMe,SAAS,CAACP,cAAD,CAAtC;;AACA,QAAMP,eAAe,GAAG,MAAMgB,UAAU,CAACT,cAAD,CAAxC;;AAEA,QAAML,iBAAiB,GAAG,MAAMY,SAAS,CAACN,iBAAD,CAAzC;;AACA,QAAML,kBAAkB,GAAG,MAAMW,SAAS,CAACN,iBAAD,CAA1C;;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AAACT,MAAAA,cAAc,EAAEA,cAAjB;AACCC,MAAAA,eAAe,EAAEA,eADlB;AAECC,MAAAA,aAAa,EAAEA,aAFhB;AAGCC,MAAAA,iBAAiB,EAAEA,iBAHpB;AAICC,MAAAA,kBAAkB,EAAEA,kBAJrB;AAKCC,MAAAA,gBAAgB,EAAEA;AALnB,KADT;AAAA,cAQGE;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlDD;;GAAMD,a;;KAAAA,a;AAoDN,SAAQR,YAAR,EAAsBQ,aAAtB","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst ModalContext = React.createContext<{\r\n    openLoginModal(): void,\r\n    closeLoginModal(): void,\r\n    isLoginOpened: boolean;\r\n    openRegisterModal(): void,\r\n    closeRegisterModal(): void,\r\n    isRegisterOpened: boolean;\r\n  }>\r\n\r\n  //default values                                    \r\n  ({\r\n    openLoginModal: () => {},\r\n    closeLoginModal: () => {},\r\n    isLoginOpened: false,\r\n    openRegisterModal: () => {},\r\n    closeRegisterModal: () => {},\r\n    isRegisterOpened: false,\r\n  });\r\n\r\n//Doesn't let more than one modal to be opened at once\r\nconst ModalProvider: React.FC<{}> = ({children}) => {\r\n  const [isLoginOpened, setLoginOpened] = useState<boolean>(false);\r\n  const [isRegisterOpened, setRegisterOpened] = useState<boolean>(false);\r\n  const [openedCollection, setOpenedCollection] = useState<React.Dispatch<React.SetStateAction<boolean>>[]>([])\r\n\r\n  // Auxiliar functions\r\n  const closeEverything = () => {\r\n    openedCollection.forEach((setOpen) => {\r\n      setOpen(false);\r\n    });\r\n    setOpenedCollection([])\r\n  }\r\n\r\n  const openModal = (setOpenedParam: React.Dispatch<React.SetStateAction<boolean>>) => {\r\n    closeEverything();\r\n    setOpenedParam(true);\r\n    setOpenedCollection([...openedCollection, setOpenedParam])\r\n  }\r\n\r\n  const closeModal = (setOpenedParam: React.Dispatch<React.SetStateAction<boolean>>) => {\r\n    const setOpened = openedCollection.find(set => set === setOpenedParam);\r\n    console.log(openedCollection)\r\n    if (setOpened !== undefined) {\r\n      setOpened(false);\r\n      \r\n      let openedCol = openedCollection.slice();\r\n      openedCol.filter(set => set !== setOpened);\r\n      setOpenedCollection(openedCol);\r\n    }\r\n  }\r\n  \r\n  // Sent functions\r\n  const openLoginModal = () => openModal(setLoginOpened);\r\n  const closeLoginModal = () => closeModal(setLoginOpened);\r\n\r\n  const openRegisterModal = () => openModal(setRegisterOpened);\r\n  const closeRegisterModal = () => openModal(setRegisterOpened);\r\n  \r\n  return (\r\n    <ModalContext.Provider \r\n      value={{openLoginModal: openLoginModal,\r\n              closeLoginModal: closeLoginModal,\r\n              isLoginOpened: isLoginOpened,\r\n              openRegisterModal: openRegisterModal,\r\n              closeRegisterModal: closeRegisterModal,\r\n              isRegisterOpened: isRegisterOpened,\r\n             }}>\r\n      {children}\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n\r\nexport {ModalContext, ModalProvider}"]},"metadata":{},"sourceType":"module"}