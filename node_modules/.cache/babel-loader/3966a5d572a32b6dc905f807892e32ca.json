{"ast":null,"code":"import { obtenerHelados } from '../data/item';\n\nconst obtenerPromiseHelados = (items, setItems) => {\n  const itemsPromise = new Promise((resolve, reject) => {\n    const itemsDB = obtenerHelados();\n\n    if (itemsDB.length === 0) {\n      throw new Error('No se han encontrado helados!');\n    }\n\n    setTimeout(() => {\n      resolve(itemsDB);\n    }, 2000);\n  }).then(result => {\n    setItems(result);\n    console.log('Helados: ' + items);\n  }).catch(err => {\n    console.log(err);\n  }).finally(() => {\n    console.log('Fin de promesa de helados!');\n  });\n  return itemsPromise;\n};\n\nexport { obtenerPromiseHelados };","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/logic/promises.ts"],"names":["obtenerHelados","obtenerPromiseHelados","items","setItems","itemsPromise","Promise","resolve","reject","itemsDB","length","Error","setTimeout","then","result","console","log","catch","err","finally"],"mappings":"AACA,SAAQA,cAAR,QAA6B,cAA7B;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAkBC,QAAlB,KAAmE;AAC/F,QAAMC,YAAY,GAAG,IAAIC,OAAJ,CAAsB,CAACC,OAAD,EAASC,MAAT,KAAoB;AAC7D,UAAMC,OAAiB,GAAGR,cAAc,EAAxC;;AACA,QAAIQ,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;;AACDC,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,OAAO,CAACE,OAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GARoB,EASrBI,IATqB,CASfC,MAAD,IAAsB;AACzBV,IAAAA,QAAQ,CAACU,MAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcb,KAA1B;AACD,GAZoB,EAapBc,KAboB,CAabC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAfoB,EAgBpBC,OAhBoB,CAgBZ,MAAM;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAlBoB,CAArB;AAoBA,SAAOX,YAAP;AACD,CAtBD;;AAwBA,SAAQH,qBAAR","sourcesContent":["import DtItem from '../dataTypes/item';\r\nimport {obtenerHelados} from '../data/item';\r\n\r\nconst obtenerPromiseHelados = (items: DtItem[], setItems: Function): Promise<DtItem[] | void> => {\r\n  const itemsPromise = new Promise<DtItem[]>((resolve,reject) => {\r\n    const itemsDB: DtItem[] = obtenerHelados();\r\n    if (itemsDB.length === 0) {\r\n      throw new Error('No se han encontrado helados!');\r\n    }\r\n    setTimeout(() => {\r\n      resolve(itemsDB);\r\n    }, 2000);\r\n  }).\r\n  then((result: DtItem[]) => {\r\n    setItems(result);\r\n    console.log('Helados: ' + items);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    console.log('Fin de promesa de helados!');\r\n  });\r\n\r\n  return itemsPromise;\r\n}\r\n\r\nexport {obtenerPromiseHelados};"]},"metadata":{},"sourceType":"module"}