{"ast":null,"code":"const obtenerPromiseAux = (setItems, getItems) => {\n  const itemsPromise = new Promise((resolve, reject) => {\n    const itemsDB = getItems();\n    setTimeout(() => {\n      resolve(itemsDB);\n    }, 2000);\n  }).then(result => {\n    setItems(result);\n  }).catch(err => {\n    console.error(err);\n  });\n  return itemsPromise;\n};\n\nconst obtenerPromiseHelados = (setHelados, obtenerHelados) => {\n  return obtenerPromiseAux(setHelados, obtenerHelados);\n};\n\nconst getItem = (setHelados, obtenerHelados) => {\n  return obtenerPromiseAux(setHelados, obtenerHelados);\n};\n/*(setItems: Function): Promise<DtItem[] | void> => {\r\n  const itemsPromise = new Promise<DtItem[]>((resolve,reject) => {\r\n    const itemsDB: DtItem[] = obtenerHelados();\r\n    setTimeout(() => {\r\n      resolve(itemsDB);\r\n    }, 2000);\r\n  })\r\n  .then((result: DtItem[]) => {\r\n    setItems(result);\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\n\r\n  return itemsPromise;\r\n}\r\n\r\nconst getItem = (itemId: number, setItem: Function): Promise<DtItem | void> => {\r\n  const itemsPromise = new Promise<DtItem>((resolve,reject) => {\r\n    const itemsDB: DtItem = obtenerHelado(itemId);\r\n    setTimeout(() => {\r\n      resolve(itemsDB);\r\n    }, 2000);\r\n  })\r\n  .then((result: DtItem) => {\r\n    setItem(result);\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\n\r\n  return itemsPromise;\r\n}*/\n\n\nexport { obtenerPromiseHelados, getItem };","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/helpers/promises.ts"],"names":["obtenerPromiseAux","setItems","getItems","itemsPromise","Promise","resolve","reject","itemsDB","setTimeout","then","result","catch","err","console","error","obtenerPromiseHelados","setHelados","obtenerHelados","getItem"],"mappings":"AAIA,MAAMA,iBAAiB,GAAG,CAACC,QAAD,EAAqBC,QAArB,KAA0D;AAClF,QAAMC,YAAY,GAAG,IAAIC,OAAJ,CAAiB,CAACC,OAAD,EAASC,MAAT,KAAoB;AACxD,UAAMC,OAAY,GAAGL,QAAQ,EAA7B;AACAM,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,OAAO,CAACE,OAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALoB,EAMpBE,IANoB,CAMdC,MAAD,IAAiB;AACrBT,IAAAA,QAAQ,CAACS,MAAD,CAAR;AACD,GARoB,EASpBC,KAToB,CASbC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,GAXoB,CAArB;AAaA,SAAOT,YAAP;AACD,CAfD;;AAiBA,MAAMY,qBAAqB,GAAG,CAACC,UAAD,EAAuBC,cAAvB,KAAkE;AAC9F,SAAOjB,iBAAiB,CAACgB,UAAD,EAAaC,cAAb,CAAxB;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAG,CAACF,UAAD,EAAuBC,cAAvB,KAA4E;AAC1F,SAAOjB,iBAAiB,CAACgB,UAAD,EAAaC,cAAb,CAAxB;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAQF,qBAAR,EAA+BG,OAA/B","sourcesContent":["import DtItem from '../dataTypes/item';\r\nimport {obtenerHelado, obtenerHelados} from '../data/item';\r\nimport { Type } from 'typescript';\r\n\r\nconst obtenerPromiseAux = (setItems: Function, getItems: Function): Promise<any> => {\r\n  const itemsPromise = new Promise<any>((resolve,reject) => {\r\n    const itemsDB: any = getItems();\r\n    setTimeout(() => {\r\n      resolve(itemsDB);\r\n    }, 2000);\r\n  })\r\n  .then((result: any) => {\r\n    setItems(result);\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\n\r\n  return itemsPromise;\r\n}\r\n\r\nconst obtenerPromiseHelados = (setHelados: Function, obtenerHelados: Function): Promise<any> => {\r\n  return obtenerPromiseAux(setHelados, obtenerHelados);\r\n}\r\n\r\nconst getItem = (setHelados: Function, obtenerHelados: Function): Promise<void | DtItem> => {\r\n  return obtenerPromiseAux(setHelados, obtenerHelados);\r\n}\r\n/*(setItems: Function): Promise<DtItem[] | void> => {\r\n  const itemsPromise = new Promise<DtItem[]>((resolve,reject) => {\r\n    const itemsDB: DtItem[] = obtenerHelados();\r\n    setTimeout(() => {\r\n      resolve(itemsDB);\r\n    }, 2000);\r\n  })\r\n  .then((result: DtItem[]) => {\r\n    setItems(result);\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\n\r\n  return itemsPromise;\r\n}\r\n\r\nconst getItem = (itemId: number, setItem: Function): Promise<DtItem | void> => {\r\n  const itemsPromise = new Promise<DtItem>((resolve,reject) => {\r\n    const itemsDB: DtItem = obtenerHelado(itemId);\r\n    setTimeout(() => {\r\n      resolve(itemsDB);\r\n    }, 2000);\r\n  })\r\n  .then((result: DtItem) => {\r\n    setItem(result);\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\n\r\n  return itemsPromise;\r\n}*/\r\n\r\n\r\nexport {obtenerPromiseHelados, getItem};"]},"metadata":{},"sourceType":"module"}