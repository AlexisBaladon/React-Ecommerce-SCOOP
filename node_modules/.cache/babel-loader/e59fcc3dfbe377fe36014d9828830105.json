{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactApp\\\\heladeria-e-commerce-baladon\\\\src\\\\components\\\\sessions\\\\login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Alert, Button, CloseButton, Form, Modal } from 'react-bootstrap';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    show,\n    onHide,\n    login,\n    openRegister\n  } = _ref;\n  const [alertMessage, setAlertMessage] = useState(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const handleSubmit = e => {\n    //Prevents page reload\n    e.preventDefault();\n\n    try {\n      var _emailRef$current, _passwordRef$current;\n\n      //Ref destructuring\n      const [email, password1] = [emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value, (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value];\n      if (password1 === undefined) throw new Error(\"El campo de contraseña debe ser completado\");\n      if (email === undefined) throw new Error(\"El campo de email debe ser completado\");\n      login(email, password1);\n      onHide();\n    } catch (err) {\n      if (err instanceof Error) {\n        setAlertMessage({\n          message: err.message,\n          variant: \"danger\"\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    id: \"modal-login\",\n    show: show,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      id: \"header-login\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \" Iniciar sesion \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n        variant: \"white\",\n        onClick: onHide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Correo electr\\xF3nico \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            ref: emailRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Contrase\\xF1a \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            ref: passwordRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-login-modal w-100 my-4\",\n          type: \"submit\",\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"No tienes cuenta? \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: openRegister,\n            children: \"Reg\\xEDstrate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), alertMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertMessage.variant,\n        children: alertMessage.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Login, \"nYkV1p9V7zI7/M9fCkTypbFgDi0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/components/sessions/login.tsx"],"names":["React","useRef","useState","Alert","Button","CloseButton","Form","Modal","Login","show","onHide","login","openRegister","alertMessage","setAlertMessage","emailRef","passwordRef","handleSubmit","e","preventDefault","email","password1","current","value","undefined","Error","err","message","variant"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAA8BC,WAA9B,EAA2CC,IAA3C,EAAiDC,KAAjD,QAA8D,iBAA9D;AAEA,OAAO,aAAP;;;AASA,MAAMC,KAAuB,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,MAAP;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,GAAwC;AAMvE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAgB,IAAhB,CAAhD;AACA,QAAMa,QAAQ,GAAGd,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAMe,WAAW,GAAGf,MAAM,CAAmB,IAAnB,CAA1B;;AAEA,QAAMgB,YAAY,GAAIC,CAAD,IAAwB;AAC3C;AACAA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI;AAAA;;AACF;AACA,YAAM,CAACC,KAAD,EAAQC,SAAR,IACA,CAACN,QAAD,aAACA,QAAD,4CAACA,QAAQ,CAAEO,OAAX,sDAAC,kBAAmBC,KAApB,0BAA2BP,WAAW,CAACM,OAAvC,yDAA2B,qBAAqBC,KAAhD,CADN;AAGA,UAAIF,SAAS,KAAKG,SAAlB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AAC7B,UAAIL,KAAK,KAAKI,SAAd,EAAyB,MAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AAEzBd,MAAAA,KAAK,CAACS,KAAD,EAAQC,SAAR,CAAL;AACAX,MAAAA,MAAM;AACP,KAVD,CAWA,OAAMgB,GAAN,EAAgB;AACd,UAAIA,GAAG,YAAYD,KAAnB,EAA0B;AACxBX,QAAAA,eAAe,CAAC;AAACa,UAAAA,OAAO,EAAED,GAAG,CAACC,OAAd;AAAuBC,UAAAA,OAAO,EAAE;AAAhC,SAAD,CAAf;AACD;AACF;AACF,GApBD;;AAsBA,sBAAO,QAAC,KAAD;AAAO,IAAA,EAAE,EAAC,aAAV;AACO,IAAA,IAAI,EAAEnB,IADb;AAEO,uBAAgB,+BAFvB;AAGO,IAAA,QAAQ,MAHf;AAAA,4BAIH,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,EAAE,EAAC,cAAjB;AAAA,8BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAC,OAArB;AAA6B,QAAA,OAAO,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,eAQH,QAAC,KAAD,CAAO,IAAP;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEO,YAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,GAAG,EAAEF,QAAhC;AAA0C,YAAA,QAAQ;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,UAAnB;AAA8B,YAAA,GAAG,EAAEC,WAAnC;AAAgD,YAAA,QAAQ;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,+BAAlB;AAAkD,UAAA,IAAI,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAA,wDAA8B;AAAM,YAAA,OAAO,EAAEJ,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAaGC,YAAY,iBAAI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,YAAY,CAACe,OAA7B;AAAA,kBAAuCf,YAAY,CAACc;AAApD;AAAA;AAAA;AAAA;AAAA,cAbnB;AAAA;AAAA;AAAA;AAAA;AAAA,YARG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAwBD,CAxDD;;GAAMnB,K;;KAAAA,K;AA0DN,eAAeA,KAAf","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { Alert, Button, Card, CloseButton, Form, Modal } from 'react-bootstrap';\r\n\r\nimport './login.css'\r\n\r\ninterface IProps {\r\n  show: boolean;\r\n  onHide: () => any;\r\n  login: (email: string, password: string) => Promise<any>;\r\n  openRegister: () => any;\r\n}\r\n\r\nconst Login: React.FC<IProps> = ({show, onHide, login, openRegister}) => {\r\n  interface IAlert {\r\n    message: string;\r\n    variant: string;\r\n  }\r\n\r\n  const [alertMessage, setAlertMessage] = useState<IAlert | null>(null);\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    //Prevents page reload\r\n    e.preventDefault();\r\n \r\n    try {\r\n      //Ref destructuring\r\n      const [email, password1]: [string | undefined, string | undefined] = \r\n            [emailRef?.current?.value, passwordRef.current?.value];\r\n\r\n      if (password1 === undefined) throw new Error(\"El campo de contraseña debe ser completado\");\r\n      if (email === undefined) throw new Error(\"El campo de email debe ser completado\");\r\n      \r\n      login(email, password1);\r\n      onHide();\r\n    }\r\n    catch(err: any) {\r\n      if (err instanceof Error) {\r\n        setAlertMessage({message: err.message, variant: \"danger\"});\r\n      }\r\n    }\r\n  }\r\n\r\n  return <Modal id=\"modal-login\"\r\n                show={show}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n      <Modal.Header id=\"header-login\">\r\n        <Modal.Title> Iniciar sesion </Modal.Title>\r\n        <CloseButton variant=\"white\" onClick={onHide} />\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label> Correo electrónico </Form.Label>\r\n            <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label> Contraseña </Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n          </Form.Group>\r\n          <Button className=\"button-login-modal w-100 my-4\" type=\"submit\">Iniciar Sesión</Button>\r\n          <Form.Label>No tienes cuenta? <span onClick={openRegister}>Regístrate</span></Form.Label>\r\n        </Form>\r\n        {alertMessage && <Alert variant={alertMessage.variant}>{alertMessage.message}</Alert>}\r\n      </Modal.Body>\r\n  </Modal>\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}