{"ast":null,"code":"import Item from '../dataTypes/item';\nconst imageUrl = \"./images/helados/\";\nconst items = [\n/*        id |title                   |description                                  |price|url                                  | stock*/\nnew Item(1, 'Chocolate', 'No puede faltar en tu pedido!', 20, imageUrl + 'Paletas/chocolate.jpg', 2), new Item(2, 'Sambayón', 'Un sabor clásico e imperdible', 10, imageUrl + 'Paletas/Vainilla.jpg', 3), new Item(3, 'Choconuez', 'Porque no todo en la vida es helado', 3, imageUrl + 'Paletas/nueces.jpg', 4), new Item(4, 'Paleta Triple', 'Perfecto para indecisos', 5, imageUrl + 'Paletas/triple.jpg', 5), new Item(5, 'Banana', 'El preferido de Tarzán', 7, imageUrl + 'recipientes/vainilla.jpg', 6), new Item(6, 'Dulce de L.', 'No hace falta describirlo...', 16, imageUrl + 'recipientes/dulce-de-leche.jpg', 7), new Item(7, 'Mora', 'Un sabor que te enamora', 4, imageUrl + 'recipientes/mora.jpg', 9)];\n\nconst obtenerHelados = () => items;\n\nconst obtenerHelado = itemId => {\n  let res;\n\n  const sameId = item => item.id === itemId;\n\n  res = items.find(sameId);\n\n  if (!(res instanceof Item)) {\n    throw new Error(\"Item no encontrado!!!\");\n  }\n\n  return res;\n};\n\nexport { obtenerHelados, obtenerHelado };","map":{"version":3,"sources":["F:/reactApp/heladeria-e-commerce-baladon/src/data/item.ts"],"names":["Item","imageUrl","items","obtenerHelados","obtenerHelado","itemId","res","sameId","item","id","find","Error"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AAEA,MAAMC,QAAQ,GAAG,mBAAjB;AAEA,MAAMC,KAAa,GAAG;AACtB;AACE,IAAIF,IAAJ,CAAS,CAAT,EAAW,WAAX,EAAoC,+BAApC,EAAqF,EAArF,EAAyFC,QAAQ,GAAC,uBAAlG,EAAqI,CAArI,CAFoB,EAGpB,IAAID,IAAJ,CAAS,CAAT,EAAW,UAAX,EAAoC,+BAApC,EAAqF,EAArF,EAAyFC,QAAQ,GAAC,sBAAlG,EAAqI,CAArI,CAHoB,EAIpB,IAAID,IAAJ,CAAS,CAAT,EAAW,WAAX,EAAoC,qCAApC,EAAqF,CAArF,EAAyFC,QAAQ,GAAC,oBAAlG,EAAqI,CAArI,CAJoB,EAKpB,IAAID,IAAJ,CAAS,CAAT,EAAW,eAAX,EAAoC,yBAApC,EAAqF,CAArF,EAAyFC,QAAQ,GAAC,oBAAlG,EAAqI,CAArI,CALoB,EAMpB,IAAID,IAAJ,CAAS,CAAT,EAAW,QAAX,EAAoC,wBAApC,EAAqF,CAArF,EAAyFC,QAAQ,GAAC,0BAAlG,EAAqI,CAArI,CANoB,EAOpB,IAAID,IAAJ,CAAS,CAAT,EAAW,aAAX,EAAoC,8BAApC,EAAqF,EAArF,EAAyFC,QAAQ,GAAC,gCAAlG,EAAqI,CAArI,CAPoB,EAQpB,IAAID,IAAJ,CAAS,CAAT,EAAW,MAAX,EAAoC,yBAApC,EAAqF,CAArF,EAAyFC,QAAQ,GAAC,sBAAlG,EAAqI,CAArI,CARoB,CAAtB;;AAWA,MAAME,cAAc,GAAG,MAAcD,KAArC;;AAEA,MAAME,aAAa,GAAIC,MAAD,IAA0B;AAC9C,MAAIC,GAAJ;;AACA,QAAMC,MAAM,GAAIC,IAAD,IAAiBA,IAAI,CAACC,EAAL,KAAYJ,MAA5C;;AAEAC,EAAAA,GAAG,GAAGJ,KAAK,CAACQ,IAAN,CAAWH,MAAX,CAAN;;AACA,MAAI,EAAED,GAAG,YAAYN,IAAjB,CAAJ,EAA4B;AAC1B,UAAM,IAAIW,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,SAAOL,GAAP;AACD,CAVD;;AAYA,SAAQH,cAAR,EAAwBC,aAAxB","sourcesContent":["import Item from '../dataTypes/item';\r\n\r\nconst imageUrl = \"./images/helados/\";\r\n\r\nconst items: Item[] = [\r\n/*        id |title                   |description                                  |price|url                                  | stock*/\r\n  new Item(1,'Chocolate'            , 'No puede faltar en tu pedido!'                 ,20 ,imageUrl+'Paletas/chocolate.jpg'          , 2),\r\n  new Item(2,'Sambayón'             , 'Un sabor clásico e imperdible'                 ,10 ,imageUrl+'Paletas/Vainilla.jpg'           , 3),\r\n  new Item(3,'Choconuez'            , 'Porque no todo en la vida es helado'           ,3  ,imageUrl+'Paletas/nueces.jpg'             , 4),\r\n  new Item(4,'Paleta Triple'        , 'Perfecto para indecisos'                       ,5  ,imageUrl+'Paletas/triple.jpg'             , 5),\r\n  new Item(5,'Banana'               , 'El preferido de Tarzán'                        ,7  ,imageUrl+'recipientes/vainilla.jpg'       , 6),\r\n  new Item(6,'Dulce de L.'          , 'No hace falta describirlo...'                  ,16 ,imageUrl+'recipientes/dulce-de-leche.jpg' , 7),\r\n  new Item(7,'Mora'                 , 'Un sabor que te enamora'                       ,4  ,imageUrl+'recipientes/mora.jpg'           , 9),\r\n];\r\n\r\nconst obtenerHelados = (): Item[] => items;\r\n\r\nconst obtenerHelado = (itemId: number): Item => {\r\n  let res: Item | undefined;\r\n  const sameId = (item: Item) => (item.id === itemId);\r\n  \r\n  res = items.find(sameId);\r\n  if (!(res instanceof Item)) {\r\n    throw new Error(\"Item no encontrado!!!\");\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nexport {obtenerHelados, obtenerHelado};"]},"metadata":{},"sourceType":"module"}